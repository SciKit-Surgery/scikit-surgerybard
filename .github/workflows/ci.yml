on: push

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7


      # VTK uses OpenGL 2.0, but the windows Server version used on
      # GitHub actions only has 1.1, so need to setup software rendering
      # with Mesa.
      # https://github.com/pal1000/mesa-dist-win
      - name: Setup Mesa (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl --output mesa.7z -L https://github.com/pal1000/mesa-dist-win/releases/download/20.1.1-2/mesa3d-20.1.1-release-mingw.7z
          7z x mesa.7z -omesa -y

          # The script requires user input (choice of options) so need to
          # fiddle to get it to run automatically. Not a clean way to do it,
          # but works.
          sed -i 's/@echo Please make a deployment choice:/@GOTO desktopgl/g' mesa\systemwidedeploy.cmd
          sed -i 's/@echo Desktop OpenGL drivers deploy complete./@exit/g' mesa\systemwidedeploy.cmd
          mesa\systemwidedeploy.cmd

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
 
      - name: Run tox on ubuntu using xvfb
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install xvfb libxkbcommon-x11-0
          sudo Xvfb :1 -screen 0 1024x768x24 </dev/null &
          export DISPLAY=":1"
          export LD_LIBRARY_PATH=$pythonLocation"/lib/python3.7/site-packages/PySide2/Qt/plugins/platfoms"
          tox

      - name: Run tox on windows/mac
        # Matches the 'o' in 'windows' or 'macos'
        if: contains(matrix.os, 'o')
        run: |
          tox

      - name: Run coveralls
        run: |
          pip install coveralls pyyaml
          coveralls

  deploy:
    runs-on: ubuntu-18.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@master
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: python -m pip install wheel twine setuptools versioneer

      - name: Build wheel
        run: |
	  versioneer install
          python setup.py sdist

      - name: Publish package if tagged release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
